---
openapi: 3.1.0
info:
  title: Inventory Management System - OpenAPI 3.1
  description: |-
    This is an Inventory Management System API documentation. It provides the endpoints for managing items, customers, orders, supplies, and suppliers.
    Some useful links:
    - [The github repository](https://github.com/0xJ1NX/inventory-management-system)
  contact:
    email: omarqalalweh@gmail.com
  version: 1.0.0
servers:
  - url: https://localhost:8080/api/v1
    description: Local server
tags:
  - name: items
    description: Operations about items in the inventory
  - name: suppliers
    description: Operations about suppliers
  - name: customers
    description: Operations about customers
  - name: orders
    description: Operations about orders
  - name: supplies
    description: Operations about supplies
paths:
  /items:
    get:
      tags:
        - items
      summary: Get all items
      description: return all items in the inventory in json object
      operationId: getItems
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItemsOK"

        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"


    post:
      tags:
        - items
      summary: Add a new item
      description: Add a new item to the inventory
      operationId: addItem
      requestBody:
        description: Item object that needs to be added to the inventory without the id and the quantity
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item-POST"
      responses:
        "201":
          description: Item created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItemsCreated"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /items/{id}:
    get:
      tags:
        - items
      summary: Get an item by id
      description: Returns a single item in json object
      operationId: getItemById
      parameters:
        - name: id
          in: path
          description: ID of the item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItemsOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - items
      summary: Update an item
      description: Update an item in the inventory
      operationId: updateItem
      parameters:
        - name: id
          in: path
          description: ID of the item to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Item object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item-POST"
      responses:
        "200":
          description: Item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItemsOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - items
      summary: Delete an item
      description: Delete an item from the inventory
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          description: ID of the item to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    patch:
      tags:
        - items
      summary: Update an item
      description: Update an item in the inventory
      operationId: partialUpdateItem
      parameters:
        - name: id
          in: path
          description: ID of the item to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Item object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item-POST"
      responses:
        "200":
          description: Item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItemsOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /suppliers:
    get:
      tags:
        - suppliers
      summary: Get all suppliers
      description: return all suppliers in json object
      operationId: getSuppliers
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - suppliers
      summary: Add a new supplier
      description: Add a new supplier to the inventory
      operationId: addSupplier
      requestBody:
        description: Supplier object that needs to be added to the inventory without the id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier-POST"
      responses:
        "201":
          description: Supplier created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliersCreated"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /suppliers/{id}:
    get:
      tags:
        - suppliers
      summary: Get a supplier by id
      description: Returns a single supplier in json object
      operationId: getSupplierById
      parameters:
        - name: id
          in: path
          description: ID of the supplier to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliersOK"

        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"


    put:
      tags:
        - suppliers
      summary: Update a supplier
      description: Update a supplier in the inventory
      operationId: updateSupplier
      parameters:
        - name: id
          in: path
          description: ID of the supplier to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Supplier object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier-POST"
      responses:
        "200":
          description: Supplier updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - suppliers
      summary: Delete a supplier
      description: Delete a supplier from the inventory
      operationId: deleteSupplier
      parameters:
        - name: id
          in: path
          description: ID of the supplier to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Supplier deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleted"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - suppliers
      summary: Update a supplier
      description: Update a supplier in the inventory
      operationId: partialUpdateSupplier
      parameters:
        - name: id
          in: path
          description: ID of the supplier to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Supplier object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier-POST"
      responses:
        "200":
          description: Supplier updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /customers:
    get:
      tags:
        - customers
      summary: Get all customers
      description: return all customers in json object
      operationId: getCustomers
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - customers
      summary: Add a new customer
      description: Add a new customer to the inventory
      operationId: addCustomer
      requestBody:
        description: Customer object that needs to be added to the inventory without the id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer-POST"
      responses:
        "201":
          description: Customer created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomersCreated"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /customers/{id}:
    get:
      tags:
        - customers
      summary: Get a customer by id
      description: Returns a single customer in json object
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          description: ID of the customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - customers
      summary: Update a customer
      description: Update a customer in the inventory
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          description: ID of the customer to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Customer object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer-POST"
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - customers
      summary: Delete a customer
      description: Delete a customer from the inventory
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: ID of the customer to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Customer deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleted"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - customers
      summary: Update a customer
      description: Update a customer in the inventory
      operationId: partialUpdateCustomer
      parameters:
        - name: id
          in: path
          description: ID of the customer to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Customer object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer-POST"
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /orders:
    get:
      tags:
        - orders
      summary: Get all orders
      description: return all orders in json object
      operationId: getOrders
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrdersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - orders
      summary: Add a new order
      description: Add a new order to the inventory
      operationId: addOrder
      requestBody:
        description: Order object that needs to be added to the inventory without the id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order-POST"
      responses:
        "201":
          description: Order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrdersCreated"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /orders/{id}:
    get:
      tags:
        - orders
      summary: Get an order by id
      description: Returns a single order in json object
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: ID of the order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrdersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - orders
      summary: Update an order
      description: Update an order in the inventory
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          description: ID of the order to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Order object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order-POST"
      responses:
        "200":
          description: Order updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrdersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - orders
      summary: Delete an order
      description: Delete an order from the inventory
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: ID of the order to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Order deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleted"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - orders
      summary: partial Update an order
      description: partial Update an order in the inventory
      operationId: partialUpdateOrder
      parameters:
        - name: id
          in: path
          description: ID of the order to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Order object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order-POST"
      responses:
        "200":
          description: Order updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrdersOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /supplies:
    get:
      tags:
        - supplies
      summary: Get all supplies
      description: return all supplies in json object
      operationId: getSupplies
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliesOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - supplies
      summary: Add a new supply
      description: Add a new supply to the inventory
      operationId: addSupply
      requestBody:
        description: Supply object that needs to be added to the inventory without the id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supply-POST"
      responses:
        "201":
          description: Supply created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliesCreated"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /supplies/{id}:
    get:
      tags:
        - supplies
      summary: Get a supply by id
      description: Returns a single supply in json object
      operationId: getSupplyById
      parameters:
        - name: id
          in: path
          description: ID of the supply to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliesOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - supplies
      summary: Update a supply
      description: Update a supply in the inventory
      operationId: updateSupply
      parameters:
        - name: id
          in: path
          description: ID of the supply to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Supply object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supply-POST"
      responses:
        "200":
          description: Supply updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliesOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - supplies
      summary: Delete a supply
      description: Delete a supply from the inventory
      operationId: deleteSupply
      parameters:
        - name: id
          in: path
          description: ID of the supply to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Supply deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleted"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - supplies
      summary: Update a supply
      description: Update a supply in the inventory
      operationId: partialUpdateSupply
      parameters:
        - name: id
          in: path
          description: ID of the supply to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Supply object that needs to be updated in the inventory
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supply-POST"
      responses:
        "200":
          description: Supply updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuppliesOK"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "415":
          $ref: "#/components/responses/415"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
      required:
        - id
        - name
        - description
        - price
        - quantity
    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - email
        - phone
    Supply:
      type: object
      properties:
        id:
          type: integer
          format: int64
        item_id:
          type: integer
          format: int64
        supplier_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        price_per_unit:
          type: number
          format: double
      required:
        - id
        - item_id
        - supplier_id
        - quantity
        - price_per_unit
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - email
        - phone
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 6
          date:
            type: string
            format: date-time
            example: 2024-04-17T16:30:31.840+00:00
          customerId:
            type: integer
            format: int32
            example: 12
          orderItemsDTOS:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                  example: 7
                quantity:
                  type: integer
                  format: int32
                  example: 2
                itemId:
                  type: integer
                  format: int32
                  example: 3
            example:
              id: 7
              quantity: 2
              itemId: 3

    Supply-POST:
      type: object
      properties:
        item_id:
          type: integer
          format: int64
        supplier_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        price_per_unit:
          type: number
          format: double
      required:
        - item_id
        - supplier_id
        - quantity
        - price_per_unit
    Customer-POST:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - name
        - email
        - phone
    Order-POST:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
          example: 12
          orderItems:
            type: array
            items:
              type: object
              properties:
                itemId:
                  type: integer
                  format: int32
                  example: 3
                quantity:
                  type: integer
                  format: int32
                  example: 2
            example:
              itemId: 3
              quantity: 2
    Item-POST:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
      required:
        - name
        - description
        - price
    Supplier-POST:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - name
        - email
        - phone

    ResponseItemsOK:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Items fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    ResponseItemsCreated:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: Item created successfully
        data:
          $ref: '#/components/schemas/Item'

    ResponseOrdersOK:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Orders fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    ResponseOrdersCreated:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          examples: Order created successfully
        data:
          $ref: '#/components/schemas/Order'

    ResponseSuppliesOK:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Supplies fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Supply'
    ResponseSuppliesCreated:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: Supply created successfully
        data:
          $ref: '#/components/schemas/Supply'

    ResponseCustomersOK:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Customers fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    ResponseCustomersCreated:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: Customer created successfully
        data:
          $ref: '#/components/schemas/Customer'

    ResponseSuppliersOK:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Suppliers fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    ResponseSuppliersCreated:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: Supplier created successfully
        data:
          $ref: '#/components/schemas/Supplier'


    ResponseBadRequest:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: Bad Request
        data:
          type: object
          format: nullable
          example: null
    ResponseNotFound:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Not Found
        data:
          type: object
          format: nullable
          example: null
    ResponseInternalServerError:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Internal Server Error
        data:
          type: object
          format: nullable
          example: null
    ResponseUnauthorized:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 401
        message:
          type: string
          example: Unauthorized
        data:
          type: object
          format: nullable
          example: null
    ResponseForbidden:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 403
        message:
          type: string
          example: Forbidden
        data:
          type: object
          format: nullable
          example: null
    ResponseTooManyRequests:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 429
        message:
          type: string
          example: Too Many Requests
        data:
          type: object
          format: nullable
          example: null
    ResponseUnSupportedMediaType:
      type: object
      properties:
        status:
          type: string
          example: error
        httpStatus:
          type: integer
          format: int32
          example: 415
        message:
          type: string
          example: Unsupported Media Type
        data:
          type: object
          format: nullable
          example: null
    ResponseDeleted:
      type: object
      properties:
        status:
          type: string
          example: success
        httpStatus:
          type: integer
          format: int32
          example: 204
        message:
          type: string
          example: Desired Item deleted successfully
        data:
          type: object
          format: nullable
          example: null
  responses:
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseBadRequest"
    "401":
      description: Unauthorized Access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseUnauthorized"
    "403":
      description: Forbidden Access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseForbidden"
    "404":
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseNotFound"
    "415":
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseUnSupportedMediaType"
    "429":
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseTooManyRequests"
    "500":
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseInternalServerError"
    "204":
      description: the desired Item deleted
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResponseDeleted"